package controller;

/**
 * 
 * @author Capki Kim
 * 
 * The main interface for the average user will consist of a dashboard that lists 
 * all the workflows that that user is involved in. If the user is an ¡°initializer¡±, 
 * or a person that can instantiate a workflow such as a student requesting an SPN number, 
 * that user will have a request button on the interface. The workflow programmer will 
 * specify whether a certain user type will have the functionality to start a workflow and 
 * also to be able to approve/reject incoming forms. 
 */

public class DashboardController {

	/**
	 * The button to instantiate the workflow call instantiate() from workflowManager class
	 * with the returned workflow object, either initialize the formController 
	 * written by the workflow programmer or some other controller that is written by the programmer
	 */
	public void initializeBtn(){
		
	}
	
	/**
	 * 	Calls logOut() from workflowManager class & returns to the log-in page=
	 */
	void logOut(){
		
	}

	/**
	 * When a user approves or ¡®passes¡¯ an instance, it will call transition() from the workflowManager class
	 * the transition may switch the interface to the next instance of a form if a state receives multiple forms 
	 * or just simply move the token(s) if there is only one form.
	 */
	void passBtn(){
		
	}
	/**
	 * 	When a user rejects or ¡®stops¡¯ an instance, it will call endWorkflow() from the workflowManager class
	 */
	void stopBtn(){
		
	}
	
}
